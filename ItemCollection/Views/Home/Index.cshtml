@{
    ViewBag.Title = "Item Collection";
}


@section scripts {
    <style type="text/css">
        table {
            border: 1px solid #000;
            border-collapse: collapse;
            color: #666666;
            min-width: 200px;
        }

        tr {
            border: 1px solid #000;
            line-height: 25px;
        }

        th {
            background-color: #B1C3CC;
            color: #000;
            font-size: 13px;
            text-align: left;
        }

        th, td {
            padding-left: 5px;
        }

        #status {
            color: red;
        }
    </style>

    <script src="@Url.Content("~/Scripts/knockout-2.1.0.debug.js")" type="text/javascript"></script>
    <script type="text/javascript">

        function ViewModel() {

            var self = this;
            function ItemViewModel(item) {
                var self = this;

                self.Id = item.Id;
                self.Name = item.Name;
                self.Price = item.Price;
                self.Category = item.Category;
            }

            self.items = ko.observableArray();
            self.item = ko.observable();

            self.status = ko.observable();

            self.getAll = function () {

                self.items.removeAll();
                $.getJSON("/api/items", function (items) {
                    $.each(items, function (index, item) {
                        self.items.push(new ItemViewModel(item));
                    })
                });
            }
            self.getById = function () {
                self.status("");
                var id = $('#itemId').val();

                if (!id.length) {
                    self.status("ID is required");
                    return;
                }
                $.getJSON(
                    'api/items/' + id,
                    function (data) {
                        self.item(new ItemViewModel(data));
                    })
                function (xhr, textStatus, err) {
                    self.item(null);
                    self.status(err);
                });
            }

            self.update = function () {
                self.status("");
                var id = $('#itemId').val();

                var item = {
                    Name: $('#name').val(),
                    Price: $('#price').val(),
                    Category: $('#category').val()
                };

                $.ajax({
                    url: 'api/items/' + id,
                    cache: false,
                    type: 'PUT',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(item),
                    success: self.getAll
                })
                .fail(
                function (xhr, textStatus, err) {
                    self.status(err);
                });
            }

            self.create = function () {
                self.status("");

                var item = {
                    Name: $('#name2').val(),
                    Price: $('#price2').val(),
                    Category: $('#category2').val()
                };

                $.ajax({
                    url: 'api/items',
                    cache: false,
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(item),
                    statusCode: {
                        201 : function (data) {
                            self.items.push(data);
                        }
                    }
                })
                .fail(
                function (xhr, textStatus, err) {
                    self.status(err);
                });

            }

            $.getJSON("/api/items", function (items) {
                $.each(items, function (index, item) {
                    self.items.push(new ItemViewModel(item));
                })
            });

        }

        function clearStatus() {
            $('#status').html('');
        }

        function add() {

            clearStatus();

            var item = ko.toJS(viewModel);
            var json = JSON.stringify(item);

            $.ajax({
                url: API_URL,
                cache: false,
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: json,
                statusCode: {
                    201 : function (data) {
                        self.items.push(data);
                    }
                }
            });
        }

        var viewModel = new ViewModel();
        ko.applyBindings(viewModel);


        $("#tabs").tabs();

    </script>
}


<div id="body">
    <section class="content-wrapper main-content">
        <h3>Items</h3>

        <table id="items">
            <thead>
                <tr><th>ID</th><th>Name</th><th>Category</th><th>Price</th></tr>
            </thead>
            <tbody data-bind="foreach: items">
                <tr>
                    <td data-bind="text: Id"></td>
                    <td data-bind="text: Name"></td>
                    <td data-bind="text: Category"></td>
                    <td data-bind="text: Price"></td>
                </tr>
            </tbody>
        </table>

    </section>
    <section id="detail" class="content-wrapper">

        <div id="tabs">
            <ul>
                <li><a href="#viewTab">View Item</a></li>
                <li><a href="#addNewTab">Add New Item</a></li>
            </ul>

            <div id="viewTab">
                <label for="itemId">ID</label>
                <input type="text" title="ID" name='Id' id="itemId" size="5" />
                <input type="button" value="Get" data-bind="click: getById" />

                <div data-bind="if: item()">
                    <div>
                        <label for="name">Name</label>
                        <input data-bind="value: item().Name" type="text" title="Name" id="name" />
                    </div>

                    <div>
                        <label for="category">Category</label>
                        <input data-bind="value: item().Category" type="text" title="Category" id="category" />
                    </div>

                    <div>
                        <label for="price">Price</label>
                        <input data-bind="value: item().Price" type="text" title="Price" id="price" />
                    </div>

                    <div>
                        <input type="button" value="Update" data-bind="click: update" />
                    </div>
                </div>
            </div>

            <div id="addNewTab">
                <div>
                    <label for="name">Name</label>
                    <input type="text" title="Name" id="name2" />
                </div>

                <div>
                    <label for="category">Category</label>
                    <input type="text" title="Category" id="category2" />
                </div>

                <div>
                    <label for="price">Price</label>
                    <input type="text" title="Price" id="price2" />
                </div>

                <div>
                    <input type="button" value="Add New" data-bind="click: create" " />
                </div>
            </div>

        </div>
        <div>
            <p id="status" data-bind="text: status" />
        </div>

    </section>
</div>